{"version":3,"file":"zlj-root.js","sources":["webpack://MKApp_zlj_root/webpack/universalModuleDefinition","webpack://MKApp_zlj_root/webpack/bootstrap","webpack://MKApp_zlj_root/config.js","webpack://MKApp_zlj_root/external {\"commonjs\":[\"MK\",\"metaEngine\"],\"commonjs2\":\"MK.metaEngine\",\"amd\":\"MK.metaEngine\",\"root\":\"MK.metaEngine\"}","webpack://MKApp_zlj_root/data.js","webpack://MKApp_zlj_root/external {\"root\":[\"MK\",\"utils\"],\"commonjs2\":\"MK.utils\",\"amd\":\"MK.utils\",\"commonjs\":\"MK.utils\"}","webpack://MKApp_zlj_root/index.js","webpack://MKApp_zlj_root/webapi.js","webpack://MKApp_zlj_root/./style.less?5a87","webpack://MKApp_zlj_root/action.js","webpack://MKApp_zlj_root/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://MKApp_zlj_root/reducer.js","webpack://MKApp_zlj_root/external {\"root\":\"Immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\",\"amd\":\"immutable\"}"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"MK.metaEngine\"), require(\"MK.utils\"), require(\"react\"), require(\"immutable\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"MK.metaEngine\", \"MK.utils\", \"react\", \"immutable\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MKApp_zlj_root\"] = factory(require(\"MK\")[\"metaEngine\"], require(\"MK.utils\"), require(\"react\"), require(\"immutable\"));\n\telse\n\t\troot[\"MKApp_zlj_root\"] = factory(root[\"MK.metaEngine\"], root[\"MK\"][\"utils\"], root[\"React\"], root[\"Immutable\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__13__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import webapi from './webapi'\n\nvar _options = {\n\twebapi,\n\tstartAppName: 'zlj-sign-in'\n}\n\nfunction config(options) {\n\tif (options) {\n\t\tObject.assign(_options, options)\n\t}\n}\n\nconfig.current = _options\n\nexport default config","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import config from './config'\n\nexport function getMeta() {\n    return {\n        name: 'root',\n        component: '::div',\n        className: 'zlj-root',\n        children: {\n            name: 'currentApp',\n            component: 'AppLoader',\n            appName: '{{data.currentAppName}}',\n            onRedirect: '{{$onRedirect}}'\n        }\n    }\n}\n\nexport function getInitState() {\n    return {\n        data: {\n            currentAppName: config.current.startAppName\n        }\n    }\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","const pkgJson = require('./package.json')\n\n__webpack_public_path__ = window[`__pub_${pkgJson.name}__`];\n\nimport { defaultComponent } from 'mk-meta-engine'\nconst data = require('./data')\nconst config = require('./config')\n\nrequire('./style.less')\n\nexport default {\n    name: pkgJson.name,\n    version: pkgJson.version,\n    description: pkgJson.description,\n    meta: data.getMeta(),\n    components: [],\n    config: config,\n    load: (cb) => {\n        cb(defaultComponent, require('./action'), require('./reducer'))\n\t}\n}","import { fetch } from 'mk-utils'\n\nexport default {\n\n}","// extracted by mini-css-extract-plugin","import React from 'react'\nimport { action as MetaAction, AppLoader } from 'mk-meta-engine'\nimport config from './config'\nimport { history } from 'mk-utils'\nimport { getInitState } from './data'\n\nclass action {\n    constructor(option) {\n        this.metaAction = option.metaAction\n        this.config = config.current\n    }\n\n    onInit = ({ component, injections }) => {\n        this.component = component\n        this.injections = injections\n        const initState = getInitState(),\n            defaultAppName = initState.data.currentAppName,\n            currentAppName = history.getChildApp('zlj-root') || defaultAppName\n\n        initState.data.currentAppName = currentAppName\n        injections.reduce('init', { initState })\n\n        history.listen('zlj-root', this.listen)\n        this.onRedirect({ appName: history.getChildApp('zlj-root') || defaultAppName })\n    }\n\n    listen = (childApp, location, action) => {\n        const defaultAppName = getInitState().data.currentAppName\n        const currentAppName = this.metaAction.gf('data.currentAppName') || defaultAppName\n        const targetAppName = childApp || defaultAppName\n        if (targetAppName == currentAppName) {\n            return\n        }\n        this.injections.reduce('redirect', targetAppName)\n    }\n\n    onRedirect = ({ appName }) => {\n        history.pushChildApp('zlj-root', appName)\n    }\n\n    componentWillUnmount = () => {\n        history.unlisten('zlj-root', this.listen)\n    }\n}\n\nexport default function creator(option) {\n    const metaAction = new MetaAction(option),\n        o = new action({ ...option, metaAction }),\n        ret = { ...metaAction, ...o }\n\n    metaAction.config({ metaHandlers: ret })\n\n    return ret\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","import { Map } from 'immutable'\nimport { reducer as MetaReducer } from 'mk-meta-engine'\nimport config from './config'\nimport { getInitState } from './data'\nimport { history } from 'mk-utils'\n\nclass reducer {\n    constructor(option) {\n        this.metaReducer = option.metaReducer\n        this.config = config.current\n    }\n\n    init = (state, option) => {\n        return this.metaReducer.init(state, option.initState)\n    }\n\n    redirect = (state, appName) => {\n        return this.metaReducer.sf(state, 'data.currentAppName', appName)\n    }\n}\n\nexport default function creator(option) {\n    const metaReducer = new MetaReducer(option),\n        o = new reducer({ ...option, metaReducer })\n\n    return { ...metaReducer, ...o }\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__13__;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClFA;;;;;;ACAA;;;;;;;ACEA;;;;;;ACFA;;;;;;;;;;;;;;ACIA;;;;;;;;;;;;;ACJA;;;;;;ACAA;;;;;;;;AC6CA;;;;;;AC7CA;;;;;;;ACqBA;;;;;;ACrBA;;;;A","sourceRoot":""}